<?php namespace Kitbs\CodeValidation\Tests\Laravel;

require_once realpath(dirname(__FILE__).'/../BaseTestCase.php');
require_once realpath(dirname(__FILE__).'/../../vendor/ronanguilloux/isocodes/tests/IsoCodes/Tests/CreditCardTest.php');

use Validator;
use TestCase;
use IsoCodes\Tests\CreditCardTest as BaseTest;

class CreditCardTest extends BaseTestCase {

	protected $validation;

	/**
     * getValidCreditCard: data Provider
     *
     * @return array
     */
	public function getValidCreditCard()
	{
		$test = new BaseTest;
		$cards = array(
			// Generated by http://kreditkarten.im/
			// AMEX
			array('370440908275761'),
			array('344348451715054'),
			array('374996370169705'),
			// Master Card
			array('5180264902075574'),
			array('5207515283251616'),
			array('5261045207923697'),
			array('5430767487655535'),
			array('5171321631561075'),
			array('5295884125571570'),
			array('5342547412943348'),
			// Visa
			array('4501897310598'),
			array('4449415983852'),
			array('4454508087181'),
			array('4141923828671466'),
			array('4078533643347445'),
			// Diners Club
			array('30042981318799'),
			array('30459878677006'),
			array('30024756946251'),
			array('30283756654709'),
			array('30589420538320'),
			array('36489588684038'),
			array('30068737230053'),
			array('30387114960706'),
			// BahnCard
			array('7012130929204333'),
			array('7024033326369608'),
			array('7071600911601462'),
			array('7009964523724386'),
			array('7021677729604970'),
			// Miles & More
			array('228383133704854'),
			array('994108902767291'),
			array('223657102053673'),
		);
		return array_merge($test->getValidCreditCards(), $cards);
	}
	/**
     * getInvalidCreditCard: data Provider
     *
     * @return array
     */
	public function getInvalidCreditCard()
	{
		$test = new BaseTest;
		$cards = array(
			array('370440908275751'),
			array('344348485171504'),
			array('374995370159705'),
		);
		return array_merge($test->getInvalidCreditCards(), $cards);
	}
	/**
     * testValidCreditCard
     *
     * @param mixed $creditcard
     *
     * @dataProvider getValidCreditCard
     *
     * return void
     */
	public function testValidCreditCard($creditcard=false)
	{
		$this->assertTrue($this->getValidatorInstance('creditcard', 'creditcard', $creditcard));
	}
	/**
     * testInvalidCreditCard
     *
     * @param mixed $creditcard
     *
     * @dataProvider getInvalidCreditCard
     *
     * return void
     */
	public function testInvalidCreditCard($creditcard=false)
	{
		$this->assertFalse($this->getValidatorInstance('creditcard', 'creditcard', $creditcard));
	}

}